/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.records;


import br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.Teste;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TesteRecord extends TableRecordImpl<TesteRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>teste.id</code>.
     */
    public TesteRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>teste.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>teste.nome</code>.
     */
    public TesteRecord setNome(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>teste.nome</code>.
     */
    public String getNome() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Teste.TESTE.ID;
    }

    @Override
    public Field<String> field2() {
        return Teste.TESTE.NOME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getNome();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getNome();
    }

    @Override
    public TesteRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TesteRecord value2(String value) {
        setNome(value);
        return this;
    }

    @Override
    public TesteRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TesteRecord
     */
    public TesteRecord() {
        super(Teste.TESTE);
    }

    /**
     * Create a detached, initialised TesteRecord
     */
    public TesteRecord(Integer id, String nome) {
        super(Teste.TESTE);

        setId(id);
        setNome(nome);
    }

    /**
     * Create a detached, initialised TesteRecord
     */
    public TesteRecord(br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.pojos.Teste value) {
        super(Teste.TESTE);

        if (value != null) {
            setId(value.getId());
            setNome(value.getNome());
        }
    }
}
