/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables;


import br.com.itarocha.chb.adapter.out.persistence.jooq.data.DefaultSchema;
import br.com.itarocha.chb.adapter.out.persistence.jooq.data.Keys;
import br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.records.EnderecoRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Endereco extends TableImpl<EnderecoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>endereco</code>
     */
    public static final Endereco ENDERECO = new Endereco();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnderecoRecord> getRecordType() {
        return EnderecoRecord.class;
    }

    /**
     * The column <code>endereco.id</code>.
     */
    public final TableField<EnderecoRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>endereco.bairro</code>.
     */
    public final TableField<EnderecoRecord, String> BAIRRO = createField(DSL.name("bairro"), SQLDataType.VARCHAR(32).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>endereco.cep</code>.
     */
    public final TableField<EnderecoRecord, String> CEP = createField(DSL.name("cep"), SQLDataType.VARCHAR(9).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>endereco.cidade</code>.
     */
    public final TableField<EnderecoRecord, String> CIDADE = createField(DSL.name("cidade"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>endereco.complemento</code>.
     */
    public final TableField<EnderecoRecord, String> COMPLEMENTO = createField(DSL.name("complemento"), SQLDataType.VARCHAR(32).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>endereco.latitude</code>.
     */
    public final TableField<EnderecoRecord, Double> LATITUDE = createField(DSL.name("latitude"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>endereco.logradouro</code>.
     */
    public final TableField<EnderecoRecord, String> LOGRADOURO = createField(DSL.name("logradouro"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>endereco.longitude</code>.
     */
    public final TableField<EnderecoRecord, Double> LONGITUDE = createField(DSL.name("longitude"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>endereco.numero</code>.
     */
    public final TableField<EnderecoRecord, Integer> NUMERO = createField(DSL.name("numero"), SQLDataType.INTEGER.defaultValue(DSL.field("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>endereco.uf</code>.
     */
    public final TableField<EnderecoRecord, String> UF = createField(DSL.name("uf"), SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>endereco.created_at</code>.
     */
    public final TableField<EnderecoRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("NULL", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>endereco.updated_at</code>.
     */
    public final TableField<EnderecoRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("NULL", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>endereco.created_by</code>.
     */
    public final TableField<EnderecoRecord, Long> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>endereco.updated_by</code>.
     */
    public final TableField<EnderecoRecord, Long> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    private Endereco(Name alias, Table<EnderecoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Endereco(Name alias, Table<EnderecoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>endereco</code> table reference
     */
    public Endereco(String alias) {
        this(DSL.name(alias), ENDERECO);
    }

    /**
     * Create an aliased <code>endereco</code> table reference
     */
    public Endereco(Name alias) {
        this(alias, ENDERECO);
    }

    /**
     * Create a <code>endereco</code> table reference
     */
    public Endereco() {
        this(DSL.name("endereco"), null);
    }

    public <O extends Record> Endereco(Table<O> child, ForeignKey<O, EnderecoRecord> key) {
        super(child, key, ENDERECO);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<EnderecoRecord, Long> getIdentity() {
        return (Identity<EnderecoRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EnderecoRecord> getPrimaryKey() {
        return Keys.KEY_ENDERECO_PRIMARY;
    }

    @Override
    public Endereco as(String alias) {
        return new Endereco(DSL.name(alias), this);
    }

    @Override
    public Endereco as(Name alias) {
        return new Endereco(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Endereco rename(String name) {
        return new Endereco(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Endereco rename(Name name) {
        return new Endereco(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, String, String, String, Double, String, Double, Integer, String, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
