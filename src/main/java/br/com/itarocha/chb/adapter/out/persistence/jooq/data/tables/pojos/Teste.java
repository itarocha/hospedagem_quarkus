/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Teste implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String  nome;

    public Teste() {}

    public Teste(Teste value) {
        this.id = value.id;
        this.nome = value.nome;
    }

    public Teste(
        Integer id,
        String  nome
    ) {
        this.id = id;
        this.nome = nome;
    }

    /**
     * Getter for <code>teste.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>teste.id</code>.
     */
    public Teste setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>teste.nome</code>.
     */
    public String getNome() {
        return this.nome;
    }

    /**
     * Setter for <code>teste.nome</code>.
     */
    public Teste setNome(String nome) {
        this.nome = nome;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Teste other = (Teste) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (nome == null) {
            if (other.nome != null)
                return false;
        }
        else if (!nome.equals(other.nome))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.nome == null) ? 0 : this.nome.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Teste (");

        sb.append(id);
        sb.append(", ").append(nome);

        sb.append(")");
        return sb.toString();
    }
}
