/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HospedagemMock implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long      id;
    private LocalDate dataEfetivaSaida;
    private LocalDate dataEntrada;
    private LocalDate dataPrevistaSaida;
    private Integer   quarto;
    private String    situacao;
    private LocalDate dataefetivasaida;
    private LocalDate dataentrada;
    private LocalDate dataprevistasaida;

    public HospedagemMock() {}

    public HospedagemMock(HospedagemMock value) {
        this.id = value.id;
        this.dataEfetivaSaida = value.dataEfetivaSaida;
        this.dataEntrada = value.dataEntrada;
        this.dataPrevistaSaida = value.dataPrevistaSaida;
        this.quarto = value.quarto;
        this.situacao = value.situacao;
        this.dataefetivasaida = value.dataefetivasaida;
        this.dataentrada = value.dataentrada;
        this.dataprevistasaida = value.dataprevistasaida;
    }

    public HospedagemMock(
        Long      id,
        LocalDate dataEfetivaSaida,
        LocalDate dataEntrada,
        LocalDate dataPrevistaSaida,
        Integer   quarto,
        String    situacao,
        LocalDate dataefetivasaida,
        LocalDate dataentrada,
        LocalDate dataprevistasaida
    ) {
        this.id = id;
        this.dataEfetivaSaida = dataEfetivaSaida;
        this.dataEntrada = dataEntrada;
        this.dataPrevistaSaida = dataPrevistaSaida;
        this.quarto = quarto;
        this.situacao = situacao;
        this.dataefetivasaida = dataefetivasaida;
        this.dataentrada = dataentrada;
        this.dataprevistasaida = dataprevistasaida;
    }

    /**
     * Getter for <code>hospedagem_mock.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>hospedagem_mock.id</code>.
     */
    public HospedagemMock setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.data_efetiva_saida</code>.
     */
    public LocalDate getDataEfetivaSaida() {
        return this.dataEfetivaSaida;
    }

    /**
     * Setter for <code>hospedagem_mock.data_efetiva_saida</code>.
     */
    public HospedagemMock setDataEfetivaSaida(LocalDate dataEfetivaSaida) {
        this.dataEfetivaSaida = dataEfetivaSaida;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.data_entrada</code>.
     */
    public LocalDate getDataEntrada() {
        return this.dataEntrada;
    }

    /**
     * Setter for <code>hospedagem_mock.data_entrada</code>.
     */
    public HospedagemMock setDataEntrada(LocalDate dataEntrada) {
        this.dataEntrada = dataEntrada;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.data_prevista_saida</code>.
     */
    public LocalDate getDataPrevistaSaida() {
        return this.dataPrevistaSaida;
    }

    /**
     * Setter for <code>hospedagem_mock.data_prevista_saida</code>.
     */
    public HospedagemMock setDataPrevistaSaida(LocalDate dataPrevistaSaida) {
        this.dataPrevistaSaida = dataPrevistaSaida;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.quarto</code>.
     */
    public Integer getQuarto() {
        return this.quarto;
    }

    /**
     * Setter for <code>hospedagem_mock.quarto</code>.
     */
    public HospedagemMock setQuarto(Integer quarto) {
        this.quarto = quarto;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.situacao</code>.
     */
    public String getSituacao() {
        return this.situacao;
    }

    /**
     * Setter for <code>hospedagem_mock.situacao</code>.
     */
    public HospedagemMock setSituacao(String situacao) {
        this.situacao = situacao;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.dataEfetivaSaida</code>.
     */
    public LocalDate getDataefetivasaida() {
        return this.dataefetivasaida;
    }

    /**
     * Setter for <code>hospedagem_mock.dataEfetivaSaida</code>.
     */
    public HospedagemMock setDataefetivasaida(LocalDate dataefetivasaida) {
        this.dataefetivasaida = dataefetivasaida;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.dataEntrada</code>.
     */
    public LocalDate getDataentrada() {
        return this.dataentrada;
    }

    /**
     * Setter for <code>hospedagem_mock.dataEntrada</code>.
     */
    public HospedagemMock setDataentrada(LocalDate dataentrada) {
        this.dataentrada = dataentrada;
        return this;
    }

    /**
     * Getter for <code>hospedagem_mock.dataPrevistaSaida</code>.
     */
    public LocalDate getDataprevistasaida() {
        return this.dataprevistasaida;
    }

    /**
     * Setter for <code>hospedagem_mock.dataPrevistaSaida</code>.
     */
    public HospedagemMock setDataprevistasaida(LocalDate dataprevistasaida) {
        this.dataprevistasaida = dataprevistasaida;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final HospedagemMock other = (HospedagemMock) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (dataEfetivaSaida == null) {
            if (other.dataEfetivaSaida != null)
                return false;
        }
        else if (!dataEfetivaSaida.equals(other.dataEfetivaSaida))
            return false;
        if (dataEntrada == null) {
            if (other.dataEntrada != null)
                return false;
        }
        else if (!dataEntrada.equals(other.dataEntrada))
            return false;
        if (dataPrevistaSaida == null) {
            if (other.dataPrevistaSaida != null)
                return false;
        }
        else if (!dataPrevistaSaida.equals(other.dataPrevistaSaida))
            return false;
        if (quarto == null) {
            if (other.quarto != null)
                return false;
        }
        else if (!quarto.equals(other.quarto))
            return false;
        if (situacao == null) {
            if (other.situacao != null)
                return false;
        }
        else if (!situacao.equals(other.situacao))
            return false;
        if (dataefetivasaida == null) {
            if (other.dataefetivasaida != null)
                return false;
        }
        else if (!dataefetivasaida.equals(other.dataefetivasaida))
            return false;
        if (dataentrada == null) {
            if (other.dataentrada != null)
                return false;
        }
        else if (!dataentrada.equals(other.dataentrada))
            return false;
        if (dataprevistasaida == null) {
            if (other.dataprevistasaida != null)
                return false;
        }
        else if (!dataprevistasaida.equals(other.dataprevistasaida))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.dataEfetivaSaida == null) ? 0 : this.dataEfetivaSaida.hashCode());
        result = prime * result + ((this.dataEntrada == null) ? 0 : this.dataEntrada.hashCode());
        result = prime * result + ((this.dataPrevistaSaida == null) ? 0 : this.dataPrevistaSaida.hashCode());
        result = prime * result + ((this.quarto == null) ? 0 : this.quarto.hashCode());
        result = prime * result + ((this.situacao == null) ? 0 : this.situacao.hashCode());
        result = prime * result + ((this.dataefetivasaida == null) ? 0 : this.dataefetivasaida.hashCode());
        result = prime * result + ((this.dataentrada == null) ? 0 : this.dataentrada.hashCode());
        result = prime * result + ((this.dataprevistasaida == null) ? 0 : this.dataprevistasaida.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("HospedagemMock (");

        sb.append(id);
        sb.append(", ").append(dataEfetivaSaida);
        sb.append(", ").append(dataEntrada);
        sb.append(", ").append(dataPrevistaSaida);
        sb.append(", ").append(quarto);
        sb.append(", ").append(situacao);
        sb.append(", ").append(dataefetivasaida);
        sb.append(", ").append(dataentrada);
        sb.append(", ").append(dataprevistasaida);

        sb.append(")");
        return sb.toString();
    }
}
