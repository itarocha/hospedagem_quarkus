/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hospedagem implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDate     dataEfetivaSaida;
    private LocalDate     dataEntrada;
    private LocalDate     dataPrevistaSaida;
    private String        observacoes;
    private String        tipoUtilizacao;
    private Long          destinacaoHospedagemId;
    private Long          encaminhadorId;
    private Long          entidadeId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Long          createdBy;
    private Long          updatedBy;

    public Hospedagem() {}

    public Hospedagem(Hospedagem value) {
        this.id = value.id;
        this.dataEfetivaSaida = value.dataEfetivaSaida;
        this.dataEntrada = value.dataEntrada;
        this.dataPrevistaSaida = value.dataPrevistaSaida;
        this.observacoes = value.observacoes;
        this.tipoUtilizacao = value.tipoUtilizacao;
        this.destinacaoHospedagemId = value.destinacaoHospedagemId;
        this.encaminhadorId = value.encaminhadorId;
        this.entidadeId = value.entidadeId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
    }

    public Hospedagem(
        Long          id,
        LocalDate     dataEfetivaSaida,
        LocalDate     dataEntrada,
        LocalDate     dataPrevistaSaida,
        String        observacoes,
        String        tipoUtilizacao,
        Long          destinacaoHospedagemId,
        Long          encaminhadorId,
        Long          entidadeId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        Long          createdBy,
        Long          updatedBy
    ) {
        this.id = id;
        this.dataEfetivaSaida = dataEfetivaSaida;
        this.dataEntrada = dataEntrada;
        this.dataPrevistaSaida = dataPrevistaSaida;
        this.observacoes = observacoes;
        this.tipoUtilizacao = tipoUtilizacao;
        this.destinacaoHospedagemId = destinacaoHospedagemId;
        this.encaminhadorId = encaminhadorId;
        this.entidadeId = entidadeId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>hospedagem.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>hospedagem.id</code>.
     */
    public Hospedagem setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>hospedagem.data_efetiva_saida</code>.
     */
    public LocalDate getDataEfetivaSaida() {
        return this.dataEfetivaSaida;
    }

    /**
     * Setter for <code>hospedagem.data_efetiva_saida</code>.
     */
    public Hospedagem setDataEfetivaSaida(LocalDate dataEfetivaSaida) {
        this.dataEfetivaSaida = dataEfetivaSaida;
        return this;
    }

    /**
     * Getter for <code>hospedagem.data_entrada</code>.
     */
    public LocalDate getDataEntrada() {
        return this.dataEntrada;
    }

    /**
     * Setter for <code>hospedagem.data_entrada</code>.
     */
    public Hospedagem setDataEntrada(LocalDate dataEntrada) {
        this.dataEntrada = dataEntrada;
        return this;
    }

    /**
     * Getter for <code>hospedagem.data_prevista_saida</code>.
     */
    public LocalDate getDataPrevistaSaida() {
        return this.dataPrevistaSaida;
    }

    /**
     * Setter for <code>hospedagem.data_prevista_saida</code>.
     */
    public Hospedagem setDataPrevistaSaida(LocalDate dataPrevistaSaida) {
        this.dataPrevistaSaida = dataPrevistaSaida;
        return this;
    }

    /**
     * Getter for <code>hospedagem.observacoes</code>.
     */
    public String getObservacoes() {
        return this.observacoes;
    }

    /**
     * Setter for <code>hospedagem.observacoes</code>.
     */
    public Hospedagem setObservacoes(String observacoes) {
        this.observacoes = observacoes;
        return this;
    }

    /**
     * Getter for <code>hospedagem.tipo_utilizacao</code>.
     */
    public String getTipoUtilizacao() {
        return this.tipoUtilizacao;
    }

    /**
     * Setter for <code>hospedagem.tipo_utilizacao</code>.
     */
    public Hospedagem setTipoUtilizacao(String tipoUtilizacao) {
        this.tipoUtilizacao = tipoUtilizacao;
        return this;
    }

    /**
     * Getter for <code>hospedagem.destinacao_hospedagem_id</code>.
     */
    public Long getDestinacaoHospedagemId() {
        return this.destinacaoHospedagemId;
    }

    /**
     * Setter for <code>hospedagem.destinacao_hospedagem_id</code>.
     */
    public Hospedagem setDestinacaoHospedagemId(Long destinacaoHospedagemId) {
        this.destinacaoHospedagemId = destinacaoHospedagemId;
        return this;
    }

    /**
     * Getter for <code>hospedagem.encaminhador_id</code>.
     */
    public Long getEncaminhadorId() {
        return this.encaminhadorId;
    }

    /**
     * Setter for <code>hospedagem.encaminhador_id</code>.
     */
    public Hospedagem setEncaminhadorId(Long encaminhadorId) {
        this.encaminhadorId = encaminhadorId;
        return this;
    }

    /**
     * Getter for <code>hospedagem.entidade_id</code>.
     */
    public Long getEntidadeId() {
        return this.entidadeId;
    }

    /**
     * Setter for <code>hospedagem.entidade_id</code>.
     */
    public Hospedagem setEntidadeId(Long entidadeId) {
        this.entidadeId = entidadeId;
        return this;
    }

    /**
     * Getter for <code>hospedagem.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>hospedagem.created_at</code>.
     */
    public Hospedagem setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>hospedagem.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>hospedagem.updated_at</code>.
     */
    public Hospedagem setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>hospedagem.created_by</code>.
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>hospedagem.created_by</code>.
     */
    public Hospedagem setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>hospedagem.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>hospedagem.updated_by</code>.
     */
    public Hospedagem setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Hospedagem other = (Hospedagem) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (dataEfetivaSaida == null) {
            if (other.dataEfetivaSaida != null)
                return false;
        }
        else if (!dataEfetivaSaida.equals(other.dataEfetivaSaida))
            return false;
        if (dataEntrada == null) {
            if (other.dataEntrada != null)
                return false;
        }
        else if (!dataEntrada.equals(other.dataEntrada))
            return false;
        if (dataPrevistaSaida == null) {
            if (other.dataPrevistaSaida != null)
                return false;
        }
        else if (!dataPrevistaSaida.equals(other.dataPrevistaSaida))
            return false;
        if (observacoes == null) {
            if (other.observacoes != null)
                return false;
        }
        else if (!observacoes.equals(other.observacoes))
            return false;
        if (tipoUtilizacao == null) {
            if (other.tipoUtilizacao != null)
                return false;
        }
        else if (!tipoUtilizacao.equals(other.tipoUtilizacao))
            return false;
        if (destinacaoHospedagemId == null) {
            if (other.destinacaoHospedagemId != null)
                return false;
        }
        else if (!destinacaoHospedagemId.equals(other.destinacaoHospedagemId))
            return false;
        if (encaminhadorId == null) {
            if (other.encaminhadorId != null)
                return false;
        }
        else if (!encaminhadorId.equals(other.encaminhadorId))
            return false;
        if (entidadeId == null) {
            if (other.entidadeId != null)
                return false;
        }
        else if (!entidadeId.equals(other.entidadeId))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.dataEfetivaSaida == null) ? 0 : this.dataEfetivaSaida.hashCode());
        result = prime * result + ((this.dataEntrada == null) ? 0 : this.dataEntrada.hashCode());
        result = prime * result + ((this.dataPrevistaSaida == null) ? 0 : this.dataPrevistaSaida.hashCode());
        result = prime * result + ((this.observacoes == null) ? 0 : this.observacoes.hashCode());
        result = prime * result + ((this.tipoUtilizacao == null) ? 0 : this.tipoUtilizacao.hashCode());
        result = prime * result + ((this.destinacaoHospedagemId == null) ? 0 : this.destinacaoHospedagemId.hashCode());
        result = prime * result + ((this.encaminhadorId == null) ? 0 : this.encaminhadorId.hashCode());
        result = prime * result + ((this.entidadeId == null) ? 0 : this.entidadeId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Hospedagem (");

        sb.append(id);
        sb.append(", ").append(dataEfetivaSaida);
        sb.append(", ").append(dataEntrada);
        sb.append(", ").append(dataPrevistaSaida);
        sb.append(", ").append(observacoes);
        sb.append(", ").append(tipoUtilizacao);
        sb.append(", ").append(destinacaoHospedagemId);
        sb.append(", ").append(encaminhadorId);
        sb.append(", ").append(entidadeId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
