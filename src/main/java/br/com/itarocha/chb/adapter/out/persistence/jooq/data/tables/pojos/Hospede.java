/*
 * This file is generated by jOOQ.
 */
package br.com.itarocha.chb.adapter.out.persistence.jooq.data.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hospede implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private Long          hospedagemId;
    private Long          pessoaId;
    private Long          tipoHospedeId;
    private String        baixado;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Long          createdBy;
    private Long          updatedBy;

    public Hospede() {}

    public Hospede(Hospede value) {
        this.id = value.id;
        this.hospedagemId = value.hospedagemId;
        this.pessoaId = value.pessoaId;
        this.tipoHospedeId = value.tipoHospedeId;
        this.baixado = value.baixado;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
    }

    public Hospede(
        Long          id,
        Long          hospedagemId,
        Long          pessoaId,
        Long          tipoHospedeId,
        String        baixado,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        Long          createdBy,
        Long          updatedBy
    ) {
        this.id = id;
        this.hospedagemId = hospedagemId;
        this.pessoaId = pessoaId;
        this.tipoHospedeId = tipoHospedeId;
        this.baixado = baixado;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>hospede.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>hospede.id</code>.
     */
    public Hospede setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>hospede.hospedagem_id</code>.
     */
    public Long getHospedagemId() {
        return this.hospedagemId;
    }

    /**
     * Setter for <code>hospede.hospedagem_id</code>.
     */
    public Hospede setHospedagemId(Long hospedagemId) {
        this.hospedagemId = hospedagemId;
        return this;
    }

    /**
     * Getter for <code>hospede.pessoa_id</code>.
     */
    public Long getPessoaId() {
        return this.pessoaId;
    }

    /**
     * Setter for <code>hospede.pessoa_id</code>.
     */
    public Hospede setPessoaId(Long pessoaId) {
        this.pessoaId = pessoaId;
        return this;
    }

    /**
     * Getter for <code>hospede.tipo_hospede_id</code>.
     */
    public Long getTipoHospedeId() {
        return this.tipoHospedeId;
    }

    /**
     * Setter for <code>hospede.tipo_hospede_id</code>.
     */
    public Hospede setTipoHospedeId(Long tipoHospedeId) {
        this.tipoHospedeId = tipoHospedeId;
        return this;
    }

    /**
     * Getter for <code>hospede.baixado</code>.
     */
    public String getBaixado() {
        return this.baixado;
    }

    /**
     * Setter for <code>hospede.baixado</code>.
     */
    public Hospede setBaixado(String baixado) {
        this.baixado = baixado;
        return this;
    }

    /**
     * Getter for <code>hospede.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>hospede.created_at</code>.
     */
    public Hospede setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>hospede.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>hospede.updated_at</code>.
     */
    public Hospede setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>hospede.created_by</code>.
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>hospede.created_by</code>.
     */
    public Hospede setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>hospede.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>hospede.updated_by</code>.
     */
    public Hospede setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Hospede other = (Hospede) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (hospedagemId == null) {
            if (other.hospedagemId != null)
                return false;
        }
        else if (!hospedagemId.equals(other.hospedagemId))
            return false;
        if (pessoaId == null) {
            if (other.pessoaId != null)
                return false;
        }
        else if (!pessoaId.equals(other.pessoaId))
            return false;
        if (tipoHospedeId == null) {
            if (other.tipoHospedeId != null)
                return false;
        }
        else if (!tipoHospedeId.equals(other.tipoHospedeId))
            return false;
        if (baixado == null) {
            if (other.baixado != null)
                return false;
        }
        else if (!baixado.equals(other.baixado))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.hospedagemId == null) ? 0 : this.hospedagemId.hashCode());
        result = prime * result + ((this.pessoaId == null) ? 0 : this.pessoaId.hashCode());
        result = prime * result + ((this.tipoHospedeId == null) ? 0 : this.tipoHospedeId.hashCode());
        result = prime * result + ((this.baixado == null) ? 0 : this.baixado.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Hospede (");

        sb.append(id);
        sb.append(", ").append(hospedagemId);
        sb.append(", ").append(pessoaId);
        sb.append(", ").append(tipoHospedeId);
        sb.append(", ").append(baixado);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
